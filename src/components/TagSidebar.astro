---
import { getCollection } from "astro:content";
import { kUrlBase } from "$consts";

const posts = await getCollection("blog");
const tagMap = new Map();
for (const post of posts) {
  if (post.data.tags) {
    for (const tag of post.data.tags) {
      tagMap.set(tag, (tagMap.get(tag) || 0) + 1);
    }
  }
}
const tags = Array.from(tagMap.entries()).sort((a, b) => b[1] - a[1]);
---
<aside class="tag-sidebar">
  <h3>Tags</h3>
  <ul class="tags">
    {tags.map(([tag, count]) => (
      <li>
        <a href={`${kUrlBase}/article?search=${encodeURIComponent(tag)}`}>{tag}</a>
        <span class="tag-count">({count})</span>
      </li>
    ))}
  </ul>
</aside>
<style>
.tag-sidebar {
  position: sticky;
  top: 2.5em;
  left: 0;
  width: 100%;
  max-width: 16em;
  min-width: 8em;
  box-sizing: border-box;
  padding: 1.2em 1em 1em 1em;
  background: rgba(255, 255, 255, 0.38); /* 更高透明度，更淡白色 */
  border-radius: 1.2em;
  margin-bottom: 2em;
  box-shadow: 0 2px 16px 0 rgba(0,0,0,0.08);
  backdrop-filter: blur(18px) saturate(1.2);
  -webkit-backdrop-filter: blur(18px) saturate(1.2);
  border: 1px solid rgba(200,200,200,0.18);
  z-index: 10;
  transition: background 0.2s;
}
@media (min-width: 900px) {
  .tag-sidebar {
    width: 20vw;
    max-width: 20vw;
    min-width: 12em;
  }
}
.tag-sidebar h3 {
  margin-top: 0;
  margin-bottom: 0.5em;
  font-size: 1.1em;
  color: var(--accent);
}
.tag-sidebar .tags {
  list-style: none;
  padding: 0;
  margin: 0;
}
.tag-sidebar .tags li {
  display: inline-block;
  margin: 0 0.5em 0.5em 0;
}
.tag-sidebar .tags a {
  text-decoration: none;
  color: var(--main-color);
  background: var(--raw-bg-color, rgba(101,117,133,0.10));
  padding: 0.2em 0.7em;
  border-radius: 4px;
  transition: background 0.2s, color 0.2s;
}
.tag-sidebar .tags a:hover {
  background: var(--accent);
  color: #fff;
}
.tag-sidebar .tag-count {
  font-size: 0.9em;
  color: var(--gray-color);
  margin-left: 0.2em;
}
</style>
