---
import type { CollectionEntry } from "astro:content";
import BaseHead from "$components/BaseHead.astro";
import Header from "$components/Header.astro";
import Footer from "$components/Footer.astro";
import FormattedDate from "$components/FormattedDate.astro";
import PostClick from "$components/PostClick.astro";
import Comment from "$components/Comment.astro";
import { kEnableClick, kClickInfo, kEnableComment, kUrlBase } from "$consts";
import TagList from "$components/TagList.astro";
import { getCollection } from "astro:content";

interface IdExt {
  id: string;
}

type Props = CollectionEntry<"blog">["data"] & (IdExt | { id: false });

const { id, title, desc, date, updatedDate, tags } = Astro.props;
const click: number =
  (kEnableClick && kClickInfo.find((click) => click.id === id)?.click) || 0;
const pdfPage = await (async () => {
  const pdfIndex = `blog-${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, "0")}`;
  const monthly = await getCollection("monthly");
  const month = monthly.find((m) => m.id === pdfIndex);
  if (month) {
    return `${kUrlBase}/archive/${pdfIndex}.pdf`;
  } else {
    return undefined;
  }
})();
---

<html lang="en">
  <head>
    <BaseHead title={title} description={desc} />
    <style is:global>
      main {
        width: calc(100% - 2em);
        max-width: 100%;
        margin: 0;
      }
      .prose,
      .comment-region,
      ul.tags {
        max-width: min(56rem, calc(100% - 2em));
        color: var(--main-color);
        margin: auto;
      }
      .prose {
        padding: 1em;
      }
      .prose p {
        margin-block-start: 0.5em;
        margin-block-end: 0.5em;
      }
      .title {
        margin-bottom: 1em;
        padding: 1em 0;
        text-align: center;
        line-height: 1;
      }
      .title h1 {
        margin: 0 0 0.5em 0;
      }
      .date,
      .click-count {
        margin-bottom: 0.5em;
        color: rgb(var(--date-color));
      }
      .last-updated-on,
      .click-count {
        font-style: italic;
      }
      ul.tags {
        list-style: none;
        padding: 0;
      }
      .tags li {
        display: inline-block;
        margin: 0;
        margin-right: 1em;
      }
      .tags a {
        text-decoration: none;
      }
      .tags a:hover {
        text-decoration: underline;
      }
    </style>
    {id && kEnableClick && <PostClick id={id} />}
  </head>

  <body>
    <Header pdfPage={pdfPage} />
    <main>
      <article>
        <div class="prose">
          <section class="title" aria-label="Title">
            <h1>{title}</h1>
            <div class="date">
              <FormattedDate date={date} />
              {
                updatedDate && (
                  <div class="last-updated-on">
                    Last updated on <FormattedDate date={updatedDate || date} />
                  </div>
                )
              }
            </div>
            {
              id && kEnableClick && (
                <div class="click-count">
                  {click}
                  {click === 1 ? "click" : "clicks"}
                </div>
              )
            }
            <hr />
          </section>
          <slot />
        </div>
      </article>
      {tags && <TagList tags={tags} />}
      {id && kEnableComment && <Comment id={id} />}
    </main>
    <Footer />
  </body>
</html>
