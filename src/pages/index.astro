---
import { getCollection } from "astro:content";

import { RecentComment } from "@myriaddreamin/blog-comment";

import BaseHead from "$components/BaseHead.astro";
import Header from "$components/Header.astro";
import Footer from "$components/Footer.astro";
import FormattedDate from "$components/FormattedDate.astro";
import TagList from "$components/TagList.astro";
import { renderComment } from "$components/Typst";

import {
  kSiteTitle,
  kSiteIndexTitle,
  kSiteDescription,
  kCommentList,
  kUrlBase,
  kBaiduVeriCode,
  kEnableComment,
} from "$consts";
// @ts-ignore
import AboutContent from "../../content/other/about.typ?html&body";

import "$styles/IndexPostList.css";

const posts = (await getCollection("blog")).sort(
  (a, b) => b.data.date.valueOf() - a.data.date.valueOf()
);
const pdfArchives = (await getCollection("archive")).sort(
  (a, b) => b.data.date.valueOf() - a.data.date.valueOf()
);

const recent5Posts = posts.slice(0, 5);

function extractArchive(archive: (typeof pdfArchives)[0]) {
  return [archive.id, archive.data.title];
}
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={kSiteTitle} description={kSiteDescription} />
    <!-- Baidu -->
    <meta name="baidu-site-verification" content={kBaiduVeriCode} />

    <style>
      .comments a {
        display: inline-block;
      }
      @media (max-width: 600px) {
        .posts .heading {
          display: flex;
          flex-direction: column;
        }
      }
      .comment-item {
        background-color: var(--main-bg-color);
      }
      .monthly li {
        font-style: italic;
      }
    </style>
  </head>
  <body>
    <Header />
    <main>
      <section aria-label="Prelude">
        <h1 set:html={kSiteIndexTitle} />
        <AboutContent />
      </section>
      <section aria-label="Recent Posts">
        <h2>Recent Posts</h2>
        <ul class="accent block-list posts">
          {
            recent5Posts.map((post) => (
              <li>
                <a class="heading" href={`${kUrlBase}/article/${post.id}/`}>
                  <h2>
                    <span class="title">{post.data.title}</span>
                  </h2>
                  <span class="date">
                    <FormattedDate date={post.data.date} />
                  </span>
                </a>
                {post.data.tags && <TagList tags={post.data.tags} />}
                {post.data.description || ""}
              </li>
            ))
          }
        </ul>
      </section>
      {
        kEnableComment && (
          <RecentComment
            kCommentList={kCommentList}
            renderComment={renderComment}
          >
            <fragment slot="articleRef">
              {(id: string) => (
                <a class="heading" href={`${kUrlBase}/article/${id}`}>
                  {posts.find((post) => post.id === id)?.data.title || ""}
                </a>
              )}
            </fragment>
          </RecentComment>
        )
      }

      <section aria-label="Archive">
        <h2>Archived PDFs</h2>
        <ul class="accent block-list monthly">
          {
            pdfArchives.map(extractArchive).map(([id, title]) => (
              <li>
                <a href={`${kUrlBase}/archive/${id}.pdf`}>{title}</a>
              </li>
            ))
          }
        </ul>
      </section>
    </main>
    <Footer />
  </body>
</html>
